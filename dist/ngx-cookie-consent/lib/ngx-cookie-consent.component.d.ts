import { OnInit } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { NgxCookieConsentService } from './services/ngx-cookie-consent/ngx-cookie-consent.service';
import { Router } from '@angular/router';
import * as i0 from "@angular/core";
export declare class NgxCookieConsentComponent implements OnInit {
    private router;
    private consentService;
    private formBuilder;
    cookieConsentVisible: boolean;
    showSettingsDialog: boolean;
    dropDownOpen: boolean;
    functionalCookiesClosed: boolean;
    marketingCookiesClosed: boolean;
    essentialCookiesClosed: boolean;
    otherToolsClosed: boolean;
    cookieForm: FormGroup;
    private cookieFields;
    constructor(router: Router, consentService: NgxCookieConsentService, formBuilder: FormBuilder);
    get activeLang(): string;
    get privacyPolicyUrl(): string;
    get imprintUrl(): string;
    get availableLanguages(): string[];
    get functionalCookiesAllSelected(): boolean;
    get marketingCookiesAllSelected(): boolean;
    translate(key: string, translationLang?: string): string;
    translate_o(key: string | object, translationLang?: string): string;
    config(key: string): any;
    switchLanguage(lang: string): void;
    toggle($event: any, category: string): void;
    back(): void;
    denyAllCookies(): void;
    acceptAllCookies(): void;
    saveSomeCookies(): void;
    private buildForm;
    private buildCookieFields;
    private resetForm;
    private resetDropdowns;
    private resetModal;
    ngOnInit(): void;
    closeDropDown($event: Event): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgxCookieConsentComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NgxCookieConsentComponent, "ngx-cookie-consent", never, {}, {}, never, never, false, never>;
}
